{"version":3,"sources":["App.module.css","Components/QuestInput/QuestInput.module.css","Components/Quests/Quests.module.css","Components/Quests/Quest/Quest.module.css","Components/QuestInput/QuestInput.js","Components/Quests/Quest/Quest.js","Components/Quests/Quests.js","App.js","reportWebVitals.js","store/reducer.js","index.js"],"names":["module","exports","QuestInput","props","className","classes","value","questInput","onChange","e","updateInputQuest","target","type","placeholder","onClick","addQuest","Quest","completeQuest","id","quest","Quests","quests","length","map","q","i","src","alt","App","QuestsDisplay","this","onAddQuest","onUpdateInputQuest","onCompleteQuest","Component","connect","state","dispatch","inputQuestValue","completedQuestId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","concat","updatedArray","filter","task","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,cAAgB,6B,mBCAzDD,EAAOC,QAAU,CAAC,WAAa,iC,mBCA/BD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,MAAQ,uB,sLCkBXC,EAhBI,SAACC,GAClB,OACE,sBAAKC,UAAWC,IAAQH,WAAxB,UACE,uBACEI,MAAOH,EAAMI,WACbC,SAAU,SAACC,GACT,OAAON,EAAMO,iBAAiBD,EAAEE,OAAOL,QAEzCM,KAAK,OACLC,YAAY,uCAEd,wBAAQC,QAASX,EAAMY,SAAvB,wB,kCCFSC,EATD,SAACb,GACb,OACE,qBAAmBC,UAAWC,IAAQW,MAAtC,UACE,wBAAQF,QAAS,kBAAMX,EAAMc,cAAcd,EAAMe,KAAjD,0BACCf,EAAMgB,QAFAhB,EAAMe,KCyBJE,EA1BA,SAACjB,GACd,OACE,oBAAIC,UAAWC,IAAQe,OAAvB,SACGjB,EAAMkB,OAAOC,OAAS,EACrBnB,EAAMkB,OAAOE,KAAI,SAACC,EAAGC,GACnB,OACE,cAAC,EAAD,CAEEP,GAAIO,EACJN,MAAOK,EACPP,cAAed,EAAMc,eAHhBQ,MAQX,qBACEC,IACE,sGAEFC,IAAI,8BCfRC,E,4JACJ,WACE,OACE,sBAAKxB,UAAWC,IAAQuB,IAAxB,UACE,kDACA,sBAAKxB,UAAWC,IAAQwB,cAAxB,UACE,cAAC,EAAD,CACEd,SAAUe,KAAK3B,MAAM4B,WACrBrB,iBAAkBoB,KAAK3B,MAAM6B,mBAC7BzB,WAAYuB,KAAK3B,MAAMI,aAEzB,cAAC,EAAD,CACEc,OAAQS,KAAK3B,MAAMkB,OACnBJ,cAAea,KAAK3B,MAAM8B,4B,GAbpBC,aAyCHC,eApBS,SAACC,GACvB,MAAO,CACL7B,WAAY6B,EAAM7B,WAClBc,OAAQe,EAAMf,WAIS,SAACgB,GAC1B,MAAO,CACLL,mBAAoB,SAACM,GAAD,OAClBD,EAAS,CACPzB,KAAM,qBACN0B,gBAAiBA,KAErBP,WAAY,kBAAMM,EAAS,CAAEzB,KAAM,eACnCqB,gBAAiB,SAACf,GAAD,OACfmB,EAAS,CAAEzB,KAAM,iBAAkB2B,iBAAkBrB,QAI5CiB,CAA6CP,GCrC7CY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCPRQ,EAAe,CACnB1C,WAAY,GACZc,OAAQ,CAAC,kBAAmB,qBAAsB,kBA8BrC6B,EA3BC,WAAmC,IAAlCd,EAAiC,uDAAzBa,EAAcE,EAAW,uCAChD,OAAQA,EAAOvC,MACb,IAAK,qBACH,OAAO,2BACFwB,GADL,IAEE7B,WAAY4C,EAAOb,kBAEvB,IAAK,YACH,OAAO,2BACFF,GADL,IAEEf,OAAQe,EAAMf,OAAO+B,OAAOhB,EAAM7B,YAClCA,WAAY,KAEhB,IAAK,iBACH,IAAM8C,EAAejB,EAAMf,OAAOiC,QAChC,SAACC,EAAM9B,GAAP,OAAaA,IAAM0B,EAAOZ,oBAG5B,OAAO,2BACFH,GADL,IAEEf,OAAQgC,IAEZ,QACE,OAAOjB,IClBPoB,EAAQC,YAAYP,GAE1BQ,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFI,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.3266b8e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"QuestsDisplay\":\"App_QuestsDisplay__1RzXB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuestInput\":\"QuestInput_QuestInput__22u_F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quests\":\"Quests_Quests__inNLx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quest\":\"Quest_Quest__2Wvo0\"};","import React from \"react\";\nimport classes from \"./QuestInput.module.css\";\n\nconst QuestInput = (props) => {\n  return (\n    <div className={classes.QuestInput}>\n      <input\n        value={props.questInput}\n        onChange={(e) => {\n          return props.updateInputQuest(e.target.value);\n        }}\n        type=\"text\"\n        placeholder=\"Scribe thine awesome quest here...\"\n      />\n      <button onClick={props.addQuest}>âž•</button>\n    </div>\n  );\n};\n\nexport default QuestInput;\n","import React from \"react\";\nimport classes from \"./Quest.module.css\";\n\nconst Quest = (props) => {\n  return (\n    <li key={props.id} className={classes.Quest}>\n      <button onClick={() => props.completeQuest(props.id)}>ðŸ¥¥</button>\n      {props.quest}\n    </li>\n  );\n};\n\nexport default Quest;\n","import React from \"react\";\nimport classes from \"./Quests.module.css\";\nimport Quest from \"./Quest/Quest\";\n\nconst Quests = (props) => {\n  return (\n    <ul className={classes.Quests}>\n      {props.quests.length > 0 ? (\n        props.quests.map((q, i) => {\n          return (\n            <Quest\n              key={i}\n              id={i}\n              quest={q}\n              completeQuest={props.completeQuest}\n            />\n          );\n        })\n      ) : (\n        <img\n          src={\n            \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRU8Is2nInQzWgzrvE_M4_sJDa5eAaXE6y7kQ&usqp=CAU\"\n          }\n          alt=\"We demand a shrubbery!\"\n        />\n      )}\n    </ul>\n  );\n};\n\nexport default Quests;\n","import React, { Component } from \"react\";\nimport classes from \"./App.module.css\";\n\nimport { connect } from \"react-redux\";\n\nimport QuestInput from \"./Components/QuestInput/QuestInput\";\nimport Quests from \"./Components/Quests/Quests\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={classes.App}>\n        <h1>Quests for Today</h1>\n        <div className={classes.QuestsDisplay}>\n          <QuestInput\n            addQuest={this.props.onAddQuest}\n            updateInputQuest={this.props.onUpdateInputQuest}\n            questInput={this.props.questInput}\n          />\n          <Quests\n            quests={this.props.quests}\n            completeQuest={this.props.onCompleteQuest}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    questInput: state.questInput,\n    quests: state.quests,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onUpdateInputQuest: (inputQuestValue) =>\n      dispatch({\n        type: \"UPDATE_INPUT_QUEST\",\n        inputQuestValue: inputQuestValue,\n      }),\n    onAddQuest: () => dispatch({ type: \"ADD_QUEST\" }),\n    onCompleteQuest: (id) =>\n      dispatch({ type: \"COMPLETE_QUEST\", completedQuestId: id }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n  questInput: \"\",\n  quests: [\"Find Holy Grail\", \"Answer 3 questions\", \"Track swallow\"],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"UPDATE_INPUT_QUEST\":\n      return {\n        ...state,\n        questInput: action.inputQuestValue,\n      };\n    case \"ADD_QUEST\":\n      return {\n        ...state,\n        quests: state.quests.concat(state.questInput),\n        questInput: \"\",\n      };\n    case \"COMPLETE_QUEST\":\n      const updatedArray = state.quests.filter(\n        (task, i) => i !== action.completedQuestId\n      );\n      //add coconut/huzzah sound effect?\n      return {\n        ...state,\n        quests: updatedArray,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport reducer from \"./store/reducer\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}